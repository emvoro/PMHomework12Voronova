<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DepsWebApp</name>
    </assembly>
    <members>
        <member name="M:DepsWebApp.Authentication.BasicAuthHandler.#ctor(Microsoft.Extensions.Options.IOptionsMonitor{DepsWebApp.Authentication.AuthSchemeOptions},Microsoft.Extensions.Logging.ILoggerFactory,System.Text.Encodings.Web.UrlEncoder,Microsoft.AspNetCore.Authentication.ISystemClock,DepsWebApp.Services.IAuthService)">
            <inheritdoc/>
        </member>
        <member name="M:DepsWebApp.Authentication.BasicAuthHandler.HandleAuthenticateAsync">
            <inheritdoc/>
        </member>
        <member name="T:DepsWebApp.Clients.IRatesProviderClient">
            <summary>
            Abstract currency rates provider interface.
            </summary>
        </member>
        <member name="M:DepsWebApp.Clients.IRatesProviderClient.GetRatesAsync">
            <summary>
            Requests rates from  currency rates provider.
            </summary>
            <returns>Returns currency rates.</returns>
        </member>
        <member name="T:DepsWebApp.Clients.NbuClient">
            <summary>
            NBU currency rates provider.
            For more details, please visit
            https://bank.gov.ua/ua/open-data/api-dev
            </summary>
        </member>
        <member name="M:DepsWebApp.Clients.NbuClient.#ctor(System.Net.Http.HttpClient,Microsoft.Extensions.Options.IOptions{DepsWebApp.Options.NbuClientOptions})">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:DepsWebApp.Clients.NbuClient.GetRatesAsync">
            <inheritdoc/>
        </member>
        <member name="T:DepsWebApp.Models.AuthRequest">
            <summary>
            Authentication request body model.
            </summary>
        </member>
        <member name="P:DepsWebApp.Models.AuthRequest.Login">
            <summary>
            Account login.
            </summary>
        </member>
        <member name="P:DepsWebApp.Models.AuthRequest.Password">
            <summary>
            Account password.
            </summary>
        </member>
        <member name="T:DepsWebApp.Models.Account">
            <summary>
            Account model.
            </summary>
        </member>
        <member name="P:DepsWebApp.Models.Account.Id">
            <summary>
            Account Base64 identifier.
            </summary>
        </member>
        <member name="P:DepsWebApp.Models.Account.Login">
            <summary>
            Account login.
            </summary>
        </member>
        <member name="P:DepsWebApp.Models.Account.Password">
            <summary>
            Account password.
            </summary>
        </member>
        <member name="M:DepsWebApp.Models.Account.#ctor(System.String,System.String,System.String)">
            <summary>
            Account constructor.
            </summary>
            <param name="id">Set <see cref="P:DepsWebApp.Models.Account.Id"/>Account Base64 identifier.</param>
            <param name="login">Set <see cref="P:DepsWebApp.Models.Account.Login"/>Account login.</param>
            <param name="password">Set <see cref="P:DepsWebApp.Models.Account.Password"/>Account password.</param>
        </member>
        <member name="T:DepsWebApp.Models.CurrencyRate">
            <summary>
            Currency rate model.
            </summary>
        </member>
        <member name="P:DepsWebApp.Models.CurrencyRate.Currency">
            <summary>
            Currency code (ISO).
            </summary>
        </member>
        <member name="P:DepsWebApp.Models.CurrencyRate.Rate">
            <summary>
            Currency rate related to base currency.
            </summary>
        </member>
        <member name="T:DepsWebApp.Models.Error">
            <summary>
            Error model.
            </summary>
        </member>
        <member name="P:DepsWebApp.Models.Error.Code">
            <summary>
            Error code.
            </summary>
        </member>
        <member name="P:DepsWebApp.Models.Error.Message">
            <summary>
            Error message.
            </summary>
        </member>
        <member name="T:DepsWebApp.Models.ExchangeResult">
            <summary>
            Exchange operation result.
            </summary>
        </member>
        <member name="P:DepsWebApp.Models.ExchangeResult.Rate">
            <summary>
            Exchange rate.
            </summary>
        </member>
        <member name="P:DepsWebApp.Models.ExchangeResult.SourceAmount">
            <summary>
            Amount in source currency.
            </summary>
        </member>
        <member name="P:DepsWebApp.Models.ExchangeResult.DestinationAmount">
            <summary>
            Amount in destination currency.
            </summary>
        </member>
        <member name="M:DepsWebApp.Models.ExchangeResult.#ctor(System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Constructor.
            </summary>
            <param name="rate">Set <see cref="P:DepsWebApp.Models.ExchangeResult.Rate"/> value.</param>
            <param name="srcAmount">Set <see cref="P:DepsWebApp.Models.ExchangeResult.SourceAmount"/> value.</param>
            <param name="destAmount">Set <see cref="P:DepsWebApp.Models.ExchangeResult.DestinationAmount"/> value.</param>
        </member>
        <member name="T:DepsWebApp.Contracts.NbuRate">
            <summary>
            NBU provider native data model for currency rate.
            </summary>
        </member>
        <member name="P:DepsWebApp.Contracts.NbuRate.Rate">
            <summary>
            Currency rate related to base currency (UAH).
            </summary>
        </member>
        <member name="P:DepsWebApp.Contracts.NbuRate.Currency">
            <summary>
            Currency code.
            </summary>
        </member>
        <member name="T:DepsWebApp.Controllers.AuthController">
            <summary>
            Authentication Controller for registration
            </summary>
        </member>
        <member name="M:DepsWebApp.Controllers.AuthController.#ctor(DepsWebApp.Services.IAuthService)">
            <summary>
            RatesController constructor.
            </summary>
            <param name="accountService">Account service.</param>
        </member>
        <member name="M:DepsWebApp.Controllers.AuthController.Register(DepsWebApp.Models.AuthRequest)">
            <summary>
            Method to register user account
            </summary>
            <param name="request">User data from request body.</param>
            <returns>Registration attempt result.</returns>
        </member>
        <member name="T:DepsWebApp.Controllers.RatesController">
            <summary>
            Rates controller.
            </summary>
        </member>
        <member name="M:DepsWebApp.Controllers.RatesController.#ctor(DepsWebApp.Services.IRatesService,Microsoft.Extensions.Logging.ILogger{DepsWebApp.Controllers.RatesController})">
            <summary>
            RatesController constructor.
            </summary>
            <param name="rates">Rates service.</param>
            <param name="logger">Logger.</param>
        </member>
        <member name="M:DepsWebApp.Controllers.RatesController.Get(System.String,System.String,System.Nullable{System.Decimal})">
            <summary>
            Method that gets exchanged amountin destination currency.
            </summary>
            <param name="srcCurrency">Source currency.</param>
            <param name="dstCurrency">Destination currency.</param>
            <param name="amount">Amount to exchange.</param>
            <returns>Amount in destination currency.</returns>
        </member>
        <member name="M:DepsWebApp.Converters.BaseConverter.ToBase64String(System.String)">
            <summary>
            Encode string to base64 string
            </summary>
            <param name="str">Default string</param>
            <returns>Encoded string</returns>
        </member>
        <member name="M:DepsWebApp.Converters.BaseConverter.FromBase64String(System.String)">
            <summary>
            Decode string from base64 string.
            </summary>
            <param name="str">Base64 string.</param>
            <returns>Decoded string.</returns>
        </member>
        <member name="T:DepsWebApp.Options.CacheOptions">
            <summary>
            Caching options.
            </summary>
        </member>
        <member name="P:DepsWebApp.Options.CacheOptions.RatesCacheLifeTime">
            <summary>
            Default rates cache lifetime.
            </summary>
        </member>
        <member name="T:DepsWebApp.Options.NbuClientOptions">
            <summary>
            NBU client options.
            </summary>
        </member>
        <member name="P:DepsWebApp.Options.NbuClientOptions.BaseAddress">
            <summary>
            Base address.
            </summary>
        </member>
        <member name="P:DepsWebApp.Options.NbuClientOptions.IsValid">
            <summary>
            Base address valid.
            </summary>
        </member>
        <member name="T:DepsWebApp.Options.RatesOptions">
            <summary>
            Rates options.
            </summary>
        </member>
        <member name="P:DepsWebApp.Options.RatesOptions.BaseCurrency">
            <summary>
            Base currency.
            </summary>
        </member>
        <member name="P:DepsWebApp.Options.RatesOptions.IsValid">
            <summary>
            Base currency valid.
            </summary>
        </member>
        <member name="T:DepsWebApp.Services.AuthService">
            <summary>
            Authentication service for registration.
            </summary>
        </member>
        <member name="M:DepsWebApp.Services.AuthService.RegisterAsync(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:DepsWebApp.Services.AuthService.GetUserAccount(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:DepsWebApp.Services.CacheHostedService">
            <summary>
            Cache hosted service.
            </summary>
        </member>
        <member name="M:DepsWebApp.Services.CacheHostedService.#ctor(Microsoft.Extensions.DependencyInjection.IServiceScopeFactory)">
            <summary>
            Cache hosted service constructor.
            </summary>
            <param name="scopeFactory">Scope factory.</param>
        </member>
        <member name="M:DepsWebApp.Services.CacheHostedService.StartAsync(System.Threading.CancellationToken)">
            <summary>
            Method to start task.
            </summary>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:DepsWebApp.Services.CacheHostedService.StopAsync(System.Threading.CancellationToken)">
            <summary>
            Method to stop task.
            </summary>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Task.</returns>
        </member>
        <member name="T:DepsWebApp.Services.IAuthService">
            <summary>
            Account service abstraction.
            </summary>
        </member>
        <member name="M:DepsWebApp.Services.IAuthService.RegisterAsync(System.String,System.String)">
            <summary>
            Registers user and assigns unique account id.
            </summary>
            <param name="login">User login.</param>
            <param name="password">User password.</param>
            <returns>Returns account of the created user or <c>null</c> if login already existed.</returns>
            <exception cref="T:System.ArgumentNullException">Throws when one of the arguments is null.</exception>
        </member>
        <member name="M:DepsWebApp.Services.IAuthService.GetUserAccount(System.String)">
            <summary>
            Gets user by encrypted string.
            </summary>
            <param name="accountInBase64">Encrypted user.</param>
            <returns>Returns account of the created user from encrypted string.</returns>
        </member>
        <member name="T:DepsWebApp.Services.IRatesService">
            <summary>
            Currency rates service.
            </summary>
        </member>
        <member name="M:DepsWebApp.Services.IRatesService.ExchangeAsync(System.String,System.String,System.Decimal)">
            <summary>
            Exchanges given amount from source currency to destination currency.
            </summary>
            <param name="srcCurrency">Source currency</param>
            <param name="destCurrency">Destination currency</param>
            <param name="amount">Amount of funds.</param>
            <returns>Returns exchange result or <c>null</c> if source or destination currency wasn't found.</returns>
        </member>
        <member name="M:DepsWebApp.Services.IRatesService.ActualizeRatesAsync">
            <summary>
            Actualize rates.
            Kind of abstraction leak.
            </summary>
            <returns>Returns awaiter</returns>
        </member>
    </members>
</doc>
